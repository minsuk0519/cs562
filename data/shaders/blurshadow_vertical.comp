#version 460

layout (local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
layout (binding = 0, rgba32f) uniform readonly image2D blurTarget;
layout (binding = 1, rgba32f) uniform writeonly image2D blurOutput;

const int w = 3;
const float e = 2.718;

shared vec4 v[128 + 2 * w + 1];

void main()
{
	vec4 rgba = vec4(0,0,0,0);
	int start = -w;
	int end = w;
	int length = 2 * w + 1;
	
	float weight[2 * w + 1];
	float sumWeight = 0;
	
	for(int i = start; i <= end; ++i)
	{
		weight[i + w] = pow(e, -(2 * i * i) / (w * w));
		sumWeight += weight[i + w];
	}
	for(int i = start; i <= end; ++i)
	{
		weight[i + w] /= sumWeight;
	}
	
	ivec2 gpos = ivec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y);
	uint threadid = gl_LocalInvocationID.x;

	v[threadid] = imageLoad(blurTarget, gpos + ivec2(-w, 0));
	if(threadid <= 2 * w) v[threadid + 128] = imageLoad(blurTarget, gpos + ivec2(128-w, 0));
	
    barrier();
	
	for(int i = 0; i <= 2*w; ++i)
	{
		rgba += v[threadid + i] * weight[i];
	}
			
	imageStore(blurOutput, gpos, rgba);
}